# Generated by Django 4.2.4 on 2023-08-03 17:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False, verbose_name='approved')),
                ('competitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('joined', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True, null=True)),
                ('buddy_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatchType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_type', models.CharField(choices=[('301', '301'), ('501', '501'), ('701', '701')], default='501', max_length=3)),
                ('name', models.CharField(choices=[('Best of', 'Best of'), ('First to', 'First to')], default='First to', max_length=8)),
                ('sets', models.CharField(choices=[('0', 'No sets'), ('First to', (('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'))), ('Best of', (('3', '3'), ('5', '5'), ('7', '7'), ('9', '9'), ('11', '11'), ('13', '13'), ('15', '15'), ('17', '17'), ('21', '21')))], default='0', max_length=2)),
                ('legs', models.CharField(choices=[('First to', (('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'))), ('Best of', (('3', '3'), ('5', '5'), ('7', '7'), ('9', '9'), ('11', '11'), ('13', '13'), ('15', '15'), ('17', '17'), ('21', '21')))], default='3', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=None)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_match', models.DateTimeField(auto_now=True)),
                ('player_1_score', models.IntegerField(default=0, verbose_name='player 1 score')),
                ('player_2_score', models.IntegerField(default=0, verbose_name='player 2 score')),
                ('match_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.matchtype')),
                ('player_1', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='player_1', to='manager.friend')),
                ('player_2', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='player_2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'training matches',
            },
        ),
        migrations.CreateModel(
            name='TournamentMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=None)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
                ('judge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='judge', to='manager.competitor')),
                ('match_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.matchtype')),
                ('player_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_1', to='manager.competitor')),
                ('player_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_2', to='manager.competitor')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.tournament')),
            ],
            options={
                'verbose_name_plural': 'tournament matches',
            },
        ),
        migrations.AddField(
            model_name='competitor',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.tournament'),
        ),
    ]
